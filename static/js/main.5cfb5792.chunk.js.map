{"version":3,"sources":["components/Tabs/Tabs.jsx","App.jsx","index.jsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","isSelectedTabIdCorrect","some","tab","id","selectedTab","find","className","map","cn","onClick","href","title","content","App","initialTabId","useState","setSelectedTabId","ReactDOM","render","document","getElementById"],"mappings":"8NAEaA,EAAO,SAAC,GAId,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAyBH,EAC5BI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,KAAiBA,EAAgBD,EAAK,GAAGM,GAE7DC,EAAcP,EAAKQ,MAAK,SAAAH,GAAG,OAAIA,EAAIC,KAAOH,KAEhD,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKM,UAAU,gBAAf,SACE,6BACGT,EAAKU,KAAI,SAAAL,GAAG,OACX,oBAEEI,UAAWE,IAAG,CAAE,YAAaN,EAAIC,KAAOH,IACxC,UAAQ,MAHV,SAKE,mBACES,QAAS,WACHP,EAAIC,KAAOH,GACbD,EAAcG,IAGlBQ,KAAI,WAAMR,EAAIC,IACd,UAAQ,UAPV,SASGD,EAAIS,SAbFT,EAAIC,WAoBjB,qBAAKG,UAAU,QAAQ,UAAQ,aAA/B,SACGF,EAAYQ,cC/BRf,EAAO,CAClB,CAAEM,GAAI,QAASQ,MAAO,QAASC,QAAS,eACxC,CAAET,GAAI,QAASQ,MAAO,QAASC,QAAS,eACxC,CAAET,GAAI,QAASQ,MAAO,QAASC,QAAS,gBAG7BC,EAAM,WACjB,IAAMC,EAAejB,EAAK,GAAGM,GAE7B,EAA0CY,mBAASD,GAAnD,mBAAOhB,EAAP,KAAsBkB,EAAtB,KAEMZ,EAAcP,EAAKQ,MAAK,SAAAH,GAAG,OAAIA,EAAIC,KAAOL,KAMhD,OACE,sBAAKQ,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCAA0CF,EAAYO,SACtD,cAAC,EAAD,CACEd,KAAMA,EACNC,cAAeA,EACfC,cAVgB,SAACG,GACrBc,EAAiBd,EAAIC,WCnBzBc,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.5cfb5792.chunk.js","sourcesContent":["import cn from 'classnames';\n\nexport const Tabs = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const isSelectedTabIdCorrect = tabs\n    .some(tab => tab.id === selectedTabId) ? selectedTabId : tabs[0].id;\n\n  const selectedTab = tabs.find(tab => tab.id === isSelectedTabIdCorrect);\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              key={tab.id}\n              className={cn({ 'is-active': tab.id === isSelectedTabIdCorrect })}\n              data-cy=\"Tab\"\n            >\n              <a\n                onClick={() => {\n                  if (tab.id !== isSelectedTabIdCorrect) {\n                    onTabSelected(tab);\n                  }\n                }}\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport { Tabs } from './components/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App = () => {\n  const initialTabId = tabs[0].id;\n\n  const [selectedTabId, setSelectedTabId] = useState(initialTabId);\n\n  const selectedTab = tabs.find(tab => tab.id === selectedTabId);\n\n  const onTabSelected = (tab) => {\n    setSelectedTabId(tab.id);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">{`Selected tab is ${selectedTab.title}`}</h1>\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}